"use strict"; if (typeof __JSWRAPPER === 'undefined' || (!__JSWRAPPER.initialized())) {
     if ((typeof ServiceWorkerContainer !== 'undefined' && self instanceof ServiceWorkerContainer) || (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope)) {
         importScripts('https://mcas-proxyweb.mcas.ms/js-bootstrap.js?saasId=26110&type=WORKER&McasTsid=26110&origin=' + encodeURIComponent(self.origin ? self.origin : location.origin));
     } else {
         /* eslint-disable */
         eval(function () {
             var x = (typeof __caac__ !== "undefined" && typeof __caac__.xhr !== "undefined") ? new __caac__.xhr() : new XMLHttpRequest();
             x.open = (typeof __caac__ !== "undefined" && typeof __caac__.xhro !== "undefined") ? __caac__.xhro : x.open;
             x.send = (typeof __caac__ !== "undefined" && typeof __caac__.xhrs !== "undefined") ? __caac__.xhrs : x.send;
             x.open('GET', 'https://mcas-proxyweb.mcas.ms/js-bootstrap.js?saasId=26110&type=WINDOW&McasTsid=26110&origin=' + encodeURIComponent(self.origin ? self.origin : location.origin), false);
             x.withCredentials = true;
             x.send();
             return x.responseText;
         }());
         /* eslint-enable */
     }
}define("Repos/PullRequestMentionAutocomplete",["require","exports","VSS/Features/MarkdownEditor/Formatting/Common","Mention/Autocomplete/AutocompleteUtility","VSS/Platform/Util/Array","VSS/Platform/Context","VSS/Platform/RestClientBase","VSS/Core/Util/String","react","react-dom","xss","xss/PresetOptions","VSS/Core/Observable","VSSUI/Icon","VSSUI/Link","VSSUI/Observer","VSSUI/TooltipEx"],(function(e,t,i,r,s,n,l,o,u,a,c,h,d,m,g,p,R){var P,q,S,f,v,C;P=t.Resources={},t.Resources.PullRequestPRText="PR",t.Resources.PullRequestToolbarCommandText="Mention a pull request",function(e){q=t[e]={};t[e].PullRequestAutocompleteCommand=class{constructor(){this.pullRequestCharacter="!",this.id="pr-autocomplete",this.iconProps={iconName:"BranchPullRequest"},this.text=P.PullRequestToolbarCommandText,this.rank=110,this.formatText=(e,t)=>(0,i.insertText)(e,this.pullRequestCharacter)}}}("PullRequestAutocompleteCommand"),S=t[C="PullRequestAutocompleteUtility"]={},t[C].compareMentions=function(e,t){return e&&e.original&&t&&t.original&&e.original.id-t.original.id},t[C].union=function(e,t,i){var r;return t&&0!==t.length?(r=e.concat(t),(0,s.uniqueSort)(r,i),r):e},t[C].searchHighlightedMention=function(e,t){let i=t,s='<span class="mention-autocomplete-highlight">$&</span>',n=e.split(/\s+/).filter((e=>!!e)).map((e=>(0,r.htmlEncode)(e))),l=(0,r.searchString)(t.id.toString(),n,r.SearchBehavior.Prefix,s),o=(0,r.searchString)((0,r.htmlEncode)(t.title),n,r.SearchBehavior.Contains,s),u=!0;return n.forEach((e=>{l.found[e]||o.found[e]||(u=!1)})),u&&(i={id:t.id,title:o.highlightedSource,url:t.url}),i},function(e){f=t.RestClientGit={};class i extends l.RestClientBase{constructor(e){super(e)}async getPullRequestById(e,t){return this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/git/pullRequests/{pullRequestId}",routeValues:{project:t,pullRequestId:e}})}async getPullRequestsByProject(e,t,i,r,s){const n={searchCriteria:t,maxCommentLength:i,$skip:r,$top:s};return this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/git/pullRequests",routeValues:{project:e},queryParams:n})}}t.RestClientGit.GitClientName="Repos.PullRequestMentionAutocomplete.Git.IGitRestClient",t.RestClientGit.getGitClient=function(e,i){return e.getRestClient(t.RestClientGit.GitClientName,i)},n.RestClients.add(t.RestClientGit.GitClientName,{factory:i,options:{resourceAreaId:"4e080c62-fa21-4fbc-8fef-2a10a2b38049",serviceInstanceType:"00025394-6065-48ca-87d9-7f5672854ef7"}})}(),function(e){v=t[e]={};class i extends n.VssService{constructor(){super(...arguments),this.dataCache={}}getMyPullRequests(){if(!this.myPullRequests){const e=this.pageContext.getService("ITfsPageService").getData();if(e&&e.project){const t=this.pageContext.getService("IVssPageService").getData(),i=t&&t.user&&t.user.id||"",r=e.project.id,s={repositoryId:"",includeLinks:!1,status:4,creatorId:i,reviewerId:"",sourceRefName:"",targetRefName:"",sourceRepositoryId:"",maxTime:null,minTime:null,queryTimeRangeType:null},n={repositoryId:"",includeLinks:!1,status:4,creatorId:"",reviewerId:i,sourceRefName:"",targetRefName:"",sourceRepositoryId:"",maxTime:null,minTime:null,queryTimeRangeType:null},l=(0,f.getGitClient)(this.pageContext);let o=[];const u=l.getPullRequestsByProject(r,s,0,0,20).then((e=>{const t=e.map((e=>({title:e.title,id:e.pullRequestId,url:this.getPullRequestUrl(e)})));o=(0,S.union)(o,t,((e,t)=>e&&t&&e.id-t.id))})),a=l.getPullRequestsByProject(r,n,0,0,10).then((e=>{const t=e.map((e=>({title:e.title,id:e.pullRequestId,url:this.getPullRequestUrl(e)})));o=(0,S.union)(o,t,((e,t)=>e&&t&&e.id-t.id))}));return Promise.all([u,a]).then((()=>o)).catch((e=>(console.error(e),o)))}this.myPullRequests=Promise.resolve([])}return this.myPullRequests}getPullRequest(e){let t;return this.dataCache[e.toString()]?t=this.dataCache[e.toString()]:(t=e>0?(0,f.getGitClient)(this.pageContext).getPullRequestById(e).then((e=>({title:e.title,id:e.pullRequestId,url:this.getPullRequestUrl(e)})),(e=>null)):Promise.resolve(null),this.dataCache[e.toString()]=t),t}searchPullRequests(e){const t=Object.keys(this.dataCache).map((e=>this.dataCache[e]));return Promise.all(t).then((t=>{const i=[];return t.forEach((t=>{t&&this.shouldIncludePR(t,e)&&i.push({original:t,highlighted:t})})),i})).then((t=>{const i=[];return this.getMyPullRequests().then((r=>(r.forEach((t=>{this.shouldIncludePR(t,e)&&i.push({original:t,highlighted:t})})),(0,S.union)(t,i,S.compareMentions))))}))}shouldIncludePR(e,t){return""===t||(0,o.caseInsensitiveContains)(e.title,t)||(0,o.caseInsensitiveContains)(e.id.toString(),t)}getPullRequestUrl(e){return this.pageContext.getService("IReposRoutingService").getPullRequestUrl(e.repository.name,e.repository.project.name,e.pullRequestId)}}n.Services.add("IPullRequestMentionDataProviderService",{serviceFactory:i}),t[e].getPullRequestMentionProviderService=function(e){return e.getService("IPullRequestMentionDataProviderService")}}("PullRequestMentionDataProvider"),function(e){t.PullRequestAutocompleteProvider={};const i=/pullrequest\/(\d+)/i;class s extends n.VssService{constructor(){super(...arguments),this.shortcutCharacter="!"}search(e){return this._getSuggestions(e)}getSuggestions(){return this._getSuggestions("")}getReplacementText(e){return`${this.shortcutCharacter}${e.original.id}`}getReplacementHtml(e){return`<a href="${e.original.url}" data-vss-mention="version:1.0">PR ${e.original.id}: ${e.original.title}</a>`}getMenuItems(){return[new q.PullRequestAutocompleteCommand]}transformMarkdown(e,t){e.markup=e.markup.replace(/\!([0-9]*)/g,((i,r,s)=>{if(!r)return i;if(t&&t(s))return i;const n=new d.ObservableValue(null);return(0,v.getPullRequestMentionProviderService)(this.pageContext).getPullRequest(parseInt(r)).then((e=>n.value=e)),e.createReplacement(u.createElement(p.Observer,{prMention:n},(({prMention:e})=>e?u.createElement(l,{href:e.url,pullRequestId:e.id,title:e.title}):i)),"span")}))}transformHtml(e){return e.querySelectorAll("a[data-vss-mention]").forEach((async e=>{var t;if(!e.getAttribute("data-vss-mention")||!e.getAttribute("href"))return;const r=e.getAttribute("href"),s=null===(t=i.exec(r))||void 0===t?void 0:t[1];if(!s||!parseInt(s))return;const n=e.innerText.substr(e.innerText.indexOf(":")+1).trim(),o=u.createElement(l,{href:r,pullRequestId:s,title:n}),c=document.createElement("span");e.replaceWith(c),a.render(o,c)})),Promise.resolve()}renderSuggestion(e){const{original:t,highlighted:i}=e,r={__html:(0,c.filterXSS)(i?`PR ${i.id}`:`PR ${t.id}`,h.xssStyleDefaultOptions)},s={__html:(0,c.filterXSS)(i?i.title:t.title,h.xssStyleDefaultOptions)};return u.createElement("div",{className:"flex-row"},u.createElement(m.Icon,{className:"pr-icon",iconName:"BranchPullRequest"}),u.createElement("span",{className:"pr-type-id",dangerouslySetInnerHTML:r}),u.createElement("span",{className:"content-splitter"},": "),u.createElement(R.Tooltip,{text:t.title},u.createElement("span",{className:"flex-row text-ellipsis",dangerouslySetInnerHTML:s})))}_getSuggestions(e){let t;if((e=e.trim()).match(/^(\d+)$/)){const i=this._findPullRequestById(e),r=this._searchPullRequests(e);t=Promise.all([i,r]).then((e=>(0,S.union)(e[0],e[1],S.compareMentions)))}else t=this._searchPullRequests(e).then((t=>(t.forEach((t=>{t.highlighted=this._searchHighlightedMention(e,t.original)})),t)));return t}_findPullRequestById(e){const t=parseInt(e);return(0,v.getPullRequestMentionProviderService)(this.pageContext).getPullRequest(t).then((t=>t?[{original:t,highlighted:this._searchHighlightedMention(e.toString(),t)}]:[]))}_searchPullRequests(e){return(0,v.getPullRequestMentionProviderService)(this.pageContext).searchPullRequests(e)}_searchHighlightedMention(e,t){let i=t;const s='<span class="font-weight-heavy">$&</span>',n=e.split(/\s+/).filter((e=>!!e)).map((e=>(0,r.htmlEncode)(e))),l=(0,r.searchString)(t.id.toString(),n,r.SearchBehavior.Prefix,s),o=(0,r.searchString)((0,r.htmlEncode)(t.title),n,r.SearchBehavior.Contains,s);let u=!0;return n.forEach((e=>{l.found[e]||o.found[e]||(u=!1)})),u&&(i={id:t.id,title:o.highlightedSource,url:t.url}),i}}function l({href:e,pullRequestId:t,title:i}){return u.createElement(g.Link,{className:"mention-widget-item mention-pr-link",href:e},u.createElement(m.Icon,{className:"pr-icon margin-right-4",iconName:"BranchPullRequest"}),u.createElement("span",{className:"mention-widget-typeid"},P.PullRequestPRText," ",t,":"," "),u.createElement("span",{className:"mention-widget-title"},i))}n.Services.add("pull-request-autocomplete-service",{serviceFactory:s})}()}),["Resources","PullRequestAutocompleteCommand","PullRequestAutocompleteUtility","RestClient/Git","PullRequestMentionDataProvider","PullRequestAutocompleteProvider"]),document.dispatchEvent(new CustomEvent("scriptLoaded",{cancelable:!1,detail:{id:"ms.vss-code-web.pr-mention-autocomplete"}}));