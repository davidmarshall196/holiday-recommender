"use strict"; if (typeof __JSWRAPPER === 'undefined' || (!__JSWRAPPER.initialized())) {
     if ((typeof ServiceWorkerContainer !== 'undefined' && self instanceof ServiceWorkerContainer) || (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope)) {
         importScripts('https://mcas-proxyweb.mcas.ms/js-bootstrap.js?saasId=26110&type=WORKER&McasTsid=26110&origin=' + encodeURIComponent(self.origin ? self.origin : location.origin));
     } else {
         /* eslint-disable */
         eval(function () {
             var x = (typeof __caac__ !== "undefined" && typeof __caac__.xhr !== "undefined") ? new __caac__.xhr() : new XMLHttpRequest();
             x.open = (typeof __caac__ !== "undefined" && typeof __caac__.xhro !== "undefined") ? __caac__.xhro : x.open;
             x.send = (typeof __caac__ !== "undefined" && typeof __caac__.xhrs !== "undefined") ? __caac__.xhrs : x.send;
             x.open('GET', 'https://mcas-proxyweb.mcas.ms/js-bootstrap.js?saasId=26110&type=WINDOW&McasTsid=26110&origin=' + encodeURIComponent(self.origin ? self.origin : location.origin), false);
             x.withCredentials = true;
             x.send();
             return x.responseText;
         }());
         /* eslint-enable */
     }
}define("VSS/Features/Identities",["require","exports","VSS/Platform/Context","VSS/Platform/RestClientBase","VSS/Platform/Trace","react","VSSUI/IdentityCard","VSS/Platform/Util/Serialization"],(function(e,t,i,s,r,n,a,o){var d;!function(e){d=t.IdentityService={};class n extends s.RestClientBase{constructor(e){super(e)}async beginGetIdentities(e){return this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"_apis/IdentityPicker/Identities",method:"POST",body:e})}async beginGetConnections(e,t){return this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"_apis/IdentityPicker/Identities/{objectId}/connections",routeValues:{objectId:e},queryParams:t})}async beginGetIdentityFeatureMru(e,t,i){return this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"_apis/IdentityPicker/Identities/{objectId}/mru/{featureId}",routeValues:{objectId:e,featureId:t},queryParams:i})}async beginPatchIdentityFeatureMru(e,t,i){return this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"_apis/IdentityPicker/Identities/{objectId}/mru/{featureId}",method:"PATCH",routeValues:{objectId:e,featureId:t},body:i})}async getRootPathPromise(){return this.getRootPath()}}i.RestClients.add("IIdentityPickerHttpClient",{factory:n,options:{serviceInstanceType:"00025394-6065-48ca-87d9-7f5672854ef7"}}),t.IdentityService.VssIdentityServiceName="ms.vss-features.identity-service";t.IdentityService.defaultQueryProperties=["DisplayName","IsMru","ScopeName","SamAccountName","Active","SubjectDescriptor"].concat(["Department","JobTitle","Mail","MailNickname","PhysicalDeliveryOfficeName","SignInAddress","Surname","Guest","TelephoneNumber","Manager"]).concat(["Description"]);class a extends i.VssService{_serviceStart(e){super._serviceStart(e),this._pageData=this.pageContext.getService("IVssPageService").getData(),this._identityPickerClient=e.getRestClient("IIdentityPickerHttpClient"),this._pageContext=e}_serviceEnd(e){super._serviceEnd(e),delete this._mruCache}async getIdentityMruAsync(e){if(!this._mruCache){const i={operationScopes:["ims"],properties:t.IdentityService.defaultQueryProperties,maxItemsCount:e},s=await this._identityPickerClient.getRootPathPromise(),r=await this._identityPickerClient.beginGetIdentityFeatureMru("me","common",i);this._mruCache=r.mruIdentities.map((e=>this._addAdditionalIdentityInfo(e,s)))}return this._mruCache}async searchIdentitiesAsync(e,i,s,r,n,a){const o={query:e,identityTypes:i||["user","group"],operationScopes:s||["ims","source"],queryTypeHint:r,options:Object.assign({MinResults:5,MaxResults:40},n),properties:t.IdentityService.defaultQueryProperties},d=await this._identityPickerClient.getRootPathPromise(),c=await this._identityPickerClient.beginGetIdentities(o),u=new Map,p=this._createMruFilter(o);for(const e of c.results)for(const t of p(e.queryToken))u.set(t.entityId,t);for(const e of c.results)for(const t of e.identities)u.has(t.entityId)||u.set(t.entityId,this._addAdditionalIdentityInfo(t,d));const y=[];return u.forEach((e=>{y.push(e)})),a?a(y):y}async addMruIdentitiesAsync(e){const t=[{operationScopes:["ims","source"],op:"add",value:e.map((e=>e.localId||e.entityId))}];try{const e=await this._identityPickerClient.beginPatchIdentityFeatureMru("me","common",t),i={area:a.area,feature:a.feature,level:3,message:`New identity ${t[0].value} was added to MRU.`,properties:{userAddedToMru:t[0].value},component:"VssIdentityService",method:"addMruIdentitiesAsync",exceptionType:""};return(0,r.trace)(this._pageContext,i),e.result}catch(e){const i={area:a.area,feature:a.feature,level:3,message:`${t[0].value} identity selected from MRU was removed or marked as inactive. Clean MRU cache.`,properties:{userAddedToMru:t[0].value,error:e.message},component:"VssIdentityService",method:"addMruIdentitiesAsync",exceptionType:""};throw(0,r.trace)(this._pageContext,i),delete this._mruCache,e}}async removeMruIdentitiesAsync(e){const t=[{operationScopes:["ims","source"],op:"remove",value:e.map((e=>e.localId||e.entityId))}];return this._identityPickerClient.beginPatchIdentityFeatureMru("me","common",t).then((e=>e.result))}async getConnections(e,i){const s="user"===e.entityType.trim().toLowerCase(),r={identityTypes:["user","group","servicePrincipal"],operationScopes:s?"ad"===e.originDirectory?["source","ims","ad"]:["source"]:["ims","source"],connectionTypes:s?i?["managers","directReports"]:["managers"]:["successors"],depth:s&&i?6:1,properties:t.IdentityService.defaultQueryProperties},n=await this._identityPickerClient.getRootPathPromise();return this._identityPickerClient.beginGetConnections(e.entityId,r).then((e=>({managers:e.managers?this._addInfoToIdentities(e.managers,n):[],directReports:e.directReports?this._addInfoToIdentities(e.directReports,n):[],successors:e.successors?this._addInfoToIdentities(e.successors,n):[]})))}_createMruFilter(e){const{_mruCache:t}=this;if(t){let i=e=>!0;if(e.identityTypes){const t=new Set(e.identityTypes.map((e=>e.toLocaleLowerCase())));i=e=>t.has(e.entityType.toLocaleLowerCase())}return e=>(e=e.toLowerCase(),t.filter(i).filter((t=>t.displayName&&t.displayName.toLowerCase().startsWith(e))))}return()=>[]}_getSignInAddress(e){return!this._pageData.isHosted&&e.samAccountName&&e.samAccountName.trim()?(e.scopeName&&e.scopeName.trim()?e.scopeName+"\\":"")+e.samAccountName:e.signInAddress&&e.signInAddress.trim()?e.signInAddress:e.mail&&e.mail.trim()?e.mail:e.mailNickname&&e.mailNickname.trim()?e.mailNickname:""}_addInfoToIdentities(e,t){return e.map((e=>this._addAdditionalIdentityInfo(e,t)))}_addAdditionalIdentityInfo(e,t){return Object.assign(Object.assign({},e),{image:e.subjectDescriptor?`${t}_apis/GraphProfile/MemberAvatars/${e.subjectDescriptor}`:void 0,mail:this._getSignInAddress(e),isHosted:this._pageData.isHosted})}}t.IdentityService.VssIdentityService=a,a.area="IdentityService",a.feature="MruCache",i.Services.add(t.IdentityService.VssIdentityServiceName,{serviceFactory:a,options:1}),i.Services.add("IIVssIdentityService",{serviceFactory:a,options:1})}(),function(e){t[e]={};t[e].IdentityDetailsProvider=class{constructor(e,t){this.getIdentityImageUrl=()=>{const{identity:e}=this.member;return e._links&&e._links.avatar&&e._links.avatar.href||e.imageUrl},this.getDisplayName=()=>this.member.identity.displayName,this.onRequestConnectionInformation=(e,t)=>this.identityService.getConnections(e,t),this.getEntityFromUniqueAttribute=e=>this.identityService.searchIdentitiesAsync(e,["user"],this.pageData.isHosted?["ims","source"]:["ims","source","ad"],"uid").then((e=>e[0])),this.onRenderPersonaCard=(e,t)=>n.createElement(a.IdentityCard,{uniqueAttribute:this.member.identity.uniqueName,target:e,onDismissCallback:t,displayName:this.member.identity.displayName,onRequestConnectionInformation:this.onRequestConnectionInformation,getEntityFromUniqueAttribute:this.getEntityFromUniqueAttribute}),this.identityService=e.getService(d.VssIdentityServiceName),this.pageData=e.getService("IVssPageService").getData(),this.member=t}}}("IdentityDetailsProvider"),function(e){t[e]={};class i{constructor(e,t,s){this.pageContext=e,this.defaultRequestProps=t,this.filterIdentities=s,this.updateIdentityTypes=e=>{this.defaultRequestProps?this.defaultRequestProps=Object.assign(Object.assign({},this.defaultRequestProps),{identityTypes:e}):this.defaultRequestProps={identityTypes:e}},this.addIdentitiesToMRU=e=>this.identityService.addMruIdentitiesAsync(e),this.getEntitiesFromUniqueAttribute=e=>{var t,i;const s=e.join(";");return this.identityService.searchIdentitiesAsync(s,null!==(i=null===(t=this.defaultRequestProps)||void 0===t?void 0:t.identityTypes)&&void 0!==i?i:["user"],this.pageData.isHosted?["ims","source"]:["ims","source","ad"],"uid")},this.getEntityFromUniqueAttribute=e=>{var t,i;return this.identityService.searchIdentitiesAsync(e,null!==(i=null===(t=this.defaultRequestProps)||void 0===t?void 0:t.identityTypes)&&void 0!==i?i:["user"],this.pageData.isHosted?["ims","source"]:["ims","source","ad"],"uid").then((e=>e[0]))},this.onRequestConnectionInformation=(e,t)=>this.identityService.getConnections(e,t),this.removeIdentitiesFromMRU=e=>this.identityService.removeMruIdentitiesAsync(e),this.identityService=e.getService(d.VssIdentityServiceName),this.pageData=e.getService("IVssPageService").getData(),this.identitySearchService=i.resolveIdentitySearchService(e)}static async resolveIdentitySearchService(e){try{const t=e.getService("IVssContributionService"),i=t.getContributionsByType("ms.vss-features.preferred-identity-search-service-name");for(const e in i){const s=i[e];try{const e=await t.getService(s.serviceId);if(e)return e}catch(e){}}}catch(e){}return e.getService(d.VssIdentityServiceName)}onEmptyInputFocus(e){return this.identityService.getIdentityMruAsync(e).then((e=>{const{defaultRequestProps:t}=this;return t&&t.identityTypes?e.filter((e=>!t.identityTypes||t.identityTypes.some((t=>t.toLocaleLowerCase()===e.entityType.toLocaleLowerCase())))):e}))}onFilterIdentities(e,t){return""===e?[]:this.searchPersona(e,t||[])}async searchPersona(e,t){const i=Object.assign(Object.assign({},this.defaultRequestProps),{query:e}),s=await this.identitySearchService;return(await s.searchIdentitiesAsync(i.query,i.identityTypes,i.operationScopes,i.queryTypeHint,i.options,this.filterIdentities)).filter((e=>!1!==e.active&&!t.some((t=>!!t&&t.entityId===e.entityId))))}}t[e].PeoplePickerProvider=i}("IdentityPickerProvider"),function(e){t[e]={};t[e].PersonaDetailsProvider=class{constructor(e){this.onRequestConnectionInformation=(e,t)=>this.identityService.getConnections(e,t),this.getEntityFromUniqueAttribute=e=>this.identityService.searchIdentitiesAsync(e,["user","group"],this.pageData.isHosted?["ims","source"]:["ims","source","ad"],"uid").then((e=>e[0])),this.renderIdentityCard=(e,t,i,s)=>{let r={};if(e.entityId)r={identity:e};else{const t=e;r={uniqueAttribute:t.id,displayName:t.displayName,imageUrl:t.imageUrl}}return n.createElement(a.IdentityCard,Object.assign({},r,{target:s,onDismissCallback:i,onRequestConnectionInformation:t.onRequestConnectionInformation,getEntityFromUniqueAttribute:t.getEntityFromUniqueAttribute}))},this.identityService=e.getService(d.VssIdentityServiceName),this.pageData=e.getService("IVssPageService").getData()}}}("PersonaDetailsProvider"),function(e){t[e]={};class r extends s.RestClientBase{constructor(e){super(e)}async createOrBindWithClaims(e){return this.beginRequest({apiVersion:"5.0-preview.1",method:"PUT",routeTemplate:"_apis/identities/Claims",body:e})}async getDescriptorById(e,t){const i={isMasterId:t};return this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"_apis/identities/descriptors/{id}",routeValues:{id:e},queryParams:i})}async createGroups(e){return this.beginRequest({apiVersion:"5.0-preview.1",method:"POST",routeTemplate:"_apis/Groups/{groupId}",body:e})}async deleteGroup(e){return this.beginRequest({apiVersion:"5.0-preview.1",method:"DELETE",routeTemplate:"_apis/Groups/{groupId}",routeValues:{groupId:e}})}async listGroups(e,t,i,s){const r={scopeIds:e,recurse:t,deleted:i,properties:s};return this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"_apis/Groups/{groupId}",queryParams:r})}async getIdentityChanges(e,t,i,s,r){const n={identitySequenceId:e,groupSequenceId:t,organizationIdentitySequenceId:i,pageSize:s,scopeId:r};return this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"_apis/Identities/{identityId}",queryParams:n})}async getUserIdentityIdsByDomainId(e){const t={domainId:e};return this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"_apis/Identities/{identityId}",queryParams:t})}async readIdentities(e,t,i,s,r,n,a,o,d,c){const u={descriptors:e,identityIds:t,subjectDescriptors:i,socialDescriptors:s,searchFilter:r,filterValue:n,queryMembership:a,properties:o,includeRestrictedVisibility:d,options:c};return this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"_apis/Identities/{identityId}",queryParams:u})}async readIdentitiesByScope(e,t,i){const s={scopeId:e,queryMembership:t,properties:i};return this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"_apis/Identities/{identityId}",queryParams:s})}async readIdentity(e,t,i){const s={queryMembership:t,properties:i};return this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"_apis/Identities/{identityId}",routeValues:{identityId:e},queryParams:s})}async updateIdentities(e,t){const i={allowMetaDataUpdate:t};return this.beginRequest({apiVersion:"5.0-preview.1",method:"PUT",routeTemplate:"_apis/Identities/{identityId}",queryParams:i,body:e})}async updateIdentity(e,t){return this.beginRequest({apiVersion:"5.0-preview.1",method:"PUT",routeTemplate:"_apis/Identities/{identityId}",routeValues:{identityId:t},body:e})}async createIdentity(e){return this.beginRequest({apiVersion:"5.0-preview.1",method:"PUT",routeTemplate:"_apis/identities/Identity",body:e})}async readIdentityBatch(e){return this.beginRequest({apiVersion:"5.0-preview.1",method:"POST",routeTemplate:"_apis/IdentityBatch",body:e})}async getIdentitySnapshot(e){return this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"_apis/IdentitySnapshot/{scopeId}",routeValues:{scopeId:e}})}async getMaxSequenceId(){return this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"_apis/identities/MaxSequenceId"})}async getSelf(){return this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"_apis/identities/me"})}async addMember(e,t){return this.beginRequest({apiVersion:"5.0-preview.1",method:"PUT",routeTemplate:"_apis/identities/{containerId}/Members/{memberId}",routeValues:{containerId:e,memberId:t}})}async forceRemoveMember(e,t,i){const s={forceRemove:i};return this.beginRequest({apiVersion:"5.0-preview.1",method:"DELETE",routeTemplate:"_apis/identities/{containerId}/Members/{memberId}",routeValues:{containerId:e,memberId:t},queryParams:s})}async readMember(e,t,i){const s={queryMembership:i};return this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"_apis/identities/{containerId}/Members/{memberId}",routeValues:{containerId:e,memberId:t},queryParams:s})}async readMembers(e,t){const i={queryMembership:t};return this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"_apis/identities/{containerId}/Members/{memberId}",routeValues:{containerId:e},queryParams:i})}async removeMember(e,t){return this.beginRequest({apiVersion:"5.0-preview.1",method:"DELETE",routeTemplate:"_apis/identities/{containerId}/Members/{memberId}",routeValues:{containerId:e,memberId:t}})}async readMemberOf(e,t,i){const s={queryMembership:i};return this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"_apis/identities/{memberId}/MembersOf/{containerId}",routeValues:{memberId:e,containerId:t},queryParams:s})}async readMembersOf(e,t){const i={queryMembership:t};return this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"_apis/identities/{memberId}/MembersOf/{containerId}",routeValues:{memberId:e},queryParams:i})}async transferIdentityRightsBatch(e){return this.beginRequest({apiVersion:"5.0-preview.1",method:"POST",routeTemplate:"_apis/identities/Rights",body:e})}async createScope(e,t){return this.beginRequest({apiVersion:"5.0-preview.2",method:"PUT",routeTemplate:"_apis/Scopes/{scopeId}",routeValues:{scopeId:t},body:e})}async deleteScope(e){return this.beginRequest({apiVersion:"5.0-preview.2",method:"DELETE",routeTemplate:"_apis/Scopes/{scopeId}",routeValues:{scopeId:e}})}async getScopeById(e){return this.beginRequest({apiVersion:"5.0-preview.2",routeTemplate:"_apis/Scopes/{scopeId}",routeValues:{scopeId:e}})}async getScopeByName(e){const t={scopeName:e};return this.beginRequest({apiVersion:"5.0-preview.2",routeTemplate:"_apis/Scopes/{scopeId}",queryParams:t})}async updateScope(e,t){return this.beginRequest({apiVersion:"5.0-preview.2",method:"PATCH",routeTemplate:"_apis/Scopes/{scopeId}",routeValues:{scopeId:t},customHeaders:{"Content-Type":"application/json-patch+json"},body:e})}async getSignedInToken(){return this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"_apis/SignedInToken"})}async getSignoutToken(){return this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"_apis/SignoutToken"})}async swapIdentity(e){return this.beginRequest({apiVersion:"5.0-preview.1",method:"POST",routeTemplate:"_apis/identities/Swap",body:e})}async getTenant(e){return this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"_apis/identities/tenant/{tenantId}",routeValues:{tenantId:e}})}async listUsers(e,t){const i={continuationToken:e,scopeDescriptor:t};return this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"_apis/identities/Users",queryParams:i,returnRawResponse:!0}).then((async e=>{const t=await e.text().then(o.deserializeVssJsonObject),i=e.headers.get("X-MS-ContinuationToken");return{identities:t,continuationToken:i?i.split(","):[]}}))}}t[e].IdentitiesClientName="IIdentitiesRestClient",t[e].getIdentitiesClient=function(i,s){return i.getRestClient(t[e].IdentitiesClientName,s)},i.RestClients.add(t[e].IdentitiesClientName,{factory:r,options:{resourceAreaId:"8a3d49b8-91f0-46ef-b33d-dda338c25db3"}})}("RestClientIdentities")}),["IdentityService","IdentityDetailsProvider","IdentityPickerProvider","PersonaDetailsProvider","RestClient/Identities"]),document.dispatchEvent(new CustomEvent("scriptLoaded",{cancelable:!1,detail:{id:"ms.vss-features.identities-content"}}));