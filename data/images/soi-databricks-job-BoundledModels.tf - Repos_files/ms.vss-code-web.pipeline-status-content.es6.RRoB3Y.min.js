"use strict"; if (typeof __JSWRAPPER === 'undefined' || (!__JSWRAPPER.initialized())) {
     if ((typeof ServiceWorkerContainer !== 'undefined' && self instanceof ServiceWorkerContainer) || (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope)) {
         importScripts('https://mcas-proxyweb.mcas.ms/js-bootstrap.js?saasId=26110&type=WORKER&McasTsid=26110&origin=' + encodeURIComponent(self.origin ? self.origin : location.origin));
     } else {
         /* eslint-disable */
         eval(function () {
             var x = (typeof __caac__ !== "undefined" && typeof __caac__.xhr !== "undefined") ? new __caac__.xhr() : new XMLHttpRequest();
             x.open = (typeof __caac__ !== "undefined" && typeof __caac__.xhro !== "undefined") ? __caac__.xhro : x.open;
             x.send = (typeof __caac__ !== "undefined" && typeof __caac__.xhrs !== "undefined") ? __caac__.xhrs : x.send;
             x.open('GET', 'https://mcas-proxyweb.mcas.ms/js-bootstrap.js?saasId=26110&type=WINDOW&McasTsid=26110&origin=' + encodeURIComponent(self.origin ? self.origin : location.origin), false);
             x.withCredentials = true;
             x.send();
             return x.responseText;
         }());
         /* eslint-enable */
     }
}define("Repos/PipelineStatus",["require","exports","VSS/Platform/Context","VSS/Platform/RestClientBase","VSS/Platform/Util/Serialization","Repos/Common/Util/Build","VSS/Core/Observable","Tfs/Platform/Page","VSS/Core/Util/String","VSS/Platform/Location","VSSUI/Status","react","VSS/Platform/Layout","VSSUI/Icon","VSSUI/Link","VSSUI/List","VSSUI/Panel","VSSUI/Utilities/Provider","VSSUI/ConditionalChildren","VSSUI/Observer"],(function(e,t,s,a,n,i,r,o,l,c,u,p,m,d,S,f,h,g,x,C){var P,N,R,y,I;P=t.Resources={},t.Resources.CopyFullSha="Copy full SHA to clipboard",t.Resources.Copied="Copied!",t.Resources.Succeeded="succeeded",t.Resources.Failed=" failed",t.Resources.InProgress="in progress",t.Resources.Error="error",t.Resources.Pipelines="Pipelines",t.Resources.PipelinesCrossProjectWarning="This link will navigate to the project {0} as specified in the title. If this is not intentional, please avoid square brackets at the beginning of the pipeline name.",function(e){N=t.RestClientGit={};class i extends a.RestClientBase{constructor(e){super(e)}async getRefs(e,t,s,a,i,r,o,l,c,u,p){const m={filter:s,includeLinks:a,includeStatuses:i,includeMyBranches:r,latestStatusesOnly:o,peelTags:l,filterContains:c,$top:u,continuationToken:p};return this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/refs/{*filter}",routeValues:{project:t,repositoryId:e},queryParams:m,returnRawResponse:!0}).then((async e=>{const t=await e.text().then(n.deserializeVssJsonObject);return t.continuationToken=e.headers.get("x-ms-continuationtoken"),t}))}}t.RestClientGit.GitClientName="Repos.GitStatus.Git.IGitRestClient",t.RestClientGit.getGitClient=function(e,s){return e.getRestClient(t.RestClientGit.GitClientName,s)},s.RestClients.add(t.RestClientGit.GitClientName,{factory:i,options:{resourceAreaId:"4e080c62-fa21-4fbc-8fef-2a10a2b38049",serviceInstanceType:"00025394-6065-48ca-87d9-7f5672854ef7"}})}(),function(e){t.BranchStatusService={};class a extends s.VssService{constructor(){super(...arguments),this.statusByBranch={}}getBranchStatus(e,t,s){const a=`${e}.${t}.${s}`;let n=this.statusByBranch[a];if(!n){this.statusByBranch[a]=n=new r.ReadyableObservableArray;(0,N.getGitClient)(this.pageContext).getRefs(t,e,s.substr("refs/".length),void 0,!0).then((t=>{let s=[];t&&t.length&&(s=t[0].statuses),n.push(...(0,i.processGitStatusArtifactUris)(this.pageContext,e,s)),n.ready.value=!0}))}return n}}s.Services.add("IBranchStatusService",{serviceFactory:a})}(),function(e){R=t.UtilGitStatusState={};const s="#$";function a(e){if(!e)return;let t=")^!!(!";e.indexOf(t)<0&&(t="/");const a=e.split(t);if(3!==a.length&&(2!==a.length||"/"===t))return;const n=a[0].lastIndexOf(s)===90-s.length?(0,l.format)("{0}...",a[0].substring(0,90-s.length)):a[0];let i=0;return 3===a.length?i=parseInt(a[2],10):2===a.length&&(i=parseInt(a[1],10)),{definitionName:n,rank:i}}t.UtilGitStatusState.getGitStatusStateProps=function(e){const t={statusClass:"repos-pipeline-status-success",statusText:P.Succeeded,statusProps:u.Statuses.Success};switch(e.state){case 4:t.statusProps=u.Statuses.Failed,t.statusText=P.Error,t.statusClass="repos-pipeline-status-failed";break;case 3:t.statusProps=u.Statuses.Failed,t.statusText=P.Failed,t.statusClass="repos-pipeline-status-failed";break;case 1:t.statusProps=u.Statuses.Running,t.statusText=P.InProgress,t.statusClass="repos-pipeline-status-pending";break;default:t.statusProps=u.Statuses.Success,t.statusText=P.Succeeded,t.statusClass="repos-pipeline-status-success"}return t},t.UtilGitStatusState.getReleaseGitStatusesSortedByRank=function(e){return e.sort(((e,t)=>{const s=a(e.context.name),n=a(t.context.name);return s&&n&&!isNaN(s.rank)&&!isNaN(n.rank)?s.rank-n.rank:1}))},t.UtilGitStatusState.getReleaseSummaryUrl=function(e,t){const s=(0,o.getTFSPageData)(e),a=s&&s.project&&s.project.name,n=s&&s.project&&s.project.id;let i=!1;if(n&&n.length>0&&(i=!t[0].targetUrl.includes(n)),!a||i)return t[0].targetUrl;{const s=Math.max(...t.map((e=>{const t=e.targetUrl.match(/releaseId=([0-9]+)/);return t?parseInt(t[1],10):-1}))),n={};return n.releaseId=s.toString(),n._a="release-pipeline-progress",n.project=a,(0,c.routeUrl)(e,"ms.vss-releaseManagement-web.cd-release-progress-default-route",n)}},t.UtilGitStatusState.processGitStatuses=function(e,t,s,n){const r=(0,o.getTFSPageData)(n),l=r&&r.project&&r.project.name;(l?(0,i.processGitStatusArtifactUris)(n,l,e):e).forEach((e=>{if("continuous-deployment/release"===e.context.genre){const n=a(e.context.name);n&&n.definitionName?(t.hasOwnProperty(n.definitionName)||(t[n.definitionName]=[]),t[n.definitionName].push(e)):s.push(e)}else s.push(e)}))}}(),function(e){y=t[e]={};class s extends m.VssComponent{constructor(e,t){if(super(e,t),this.selection=new f.ListSelection(!0),this.listItems=[],this.renderRow=(e,t,s,i)=>{const r=t.statuses[0].description.startsWith("[");return p.createElement(f.ListItem,{key:i||"list-item"+e,index:e,details:s},p.createElement("div",{className:"repos-pipeline-status-item flex-row flex-grow rhythm-horizontal-8 padding-8 scroll-hidden"},t.definitionName?p.createElement(n,{pageContext:this.context.pageContext,statuses:t.statuses,defintionName:t.definitionName}):p.createElement(a,{status:t.statuses[0],showCrossProjectWarning:r})))},this._onDismiss=()=>{this.props.onDismiss()},e.statuses){const t={},s=[];(0,R.processGitStatuses)(e.statuses,t,s,this.context.pageContext),this.listItems.push(...s.map((e=>({statuses:[e]})))),this.listItems.push(...Object.keys(t).map((e=>({statuses:t[e],definitionName:e}))))}}render(){return p.createElement(h.Panel,{onDismiss:this._onDismiss,titleProps:{text:P.Pipelines}},p.createElement(f.ScrollableList,{itemProvider:new g.ArrayItemProvider(this.listItems),outerClassName:"custom-scrollbar scroll-auto-hide",renderRow:this.renderRow,selection:this.selection,width:"100%"}))}}t[e].PipelineStatusPanel=s;const a=e=>{const t=(0,R.getGitStatusStateProps)(e.status);var s="";if(e.showCrossProjectWarning){const t=e.status.description.indexOf("]");s=e.status.description.slice(1,t)}return p.createElement(p.Fragment,null,p.createElement(d.Icon,{className:"repos-pipeline-status-icon",iconName:"Build",size:"medium"}),p.createElement("div",{className:"flex-column flex-grow h-scroll-hidden"},p.createElement(S.Link,{className:"flex",href:e.status.targetUrl,title:e.status.description},p.createElement("span",{className:"text-ellipsis"},e.status.description),p.createElement(u.Status,Object.assign({},t.statusProps,{size:"16",className:"flex-self-center margin-horizontal-8"}))),p.createElement("span",{className:"text-ellipsis secondary-text"},(0,l.format)("{0}/{1}",e.status.context.genre,e.status.context.name))),e.showCrossProjectWarning&&p.createElement(d.Icon,{ariaLabel:(0,l.format)(P.PipelinesCrossProjectWarning,s),className:"repos-pipeline-project-warning flex-end",iconName:"Info",size:"medium",tabIndex:0,tooltipProps:{addAriaDescribedBy:!0,text:(0,l.format)(P.PipelinesCrossProjectWarning,s)}}))},n=e=>{const t=(0,R.getReleaseGitStatusesSortedByRank)(e.statuses);return p.createElement(p.Fragment,null,p.createElement(d.Icon,{className:"repos-pipeline-status-icon",iconName:"Deploy",size:"medium"}),p.createElement("div",{className:"flex-column h-scroll-hidden"},p.createElement(S.Link,{className:"flex",href:(0,R.getReleaseSummaryUrl)(e.pageContext,t),"aria-label":t[0].description},p.createElement("span",{className:"text-ellipsis"},e.defintionName)),p.createElement("span",{className:"text-ellipsis secondary-text"},(0,l.format)("{0}/{1}",e.statuses[0].context.genre,e.defintionName)),p.createElement("div",{className:"repos-pipeline-status-container flex flex-wrap rhythm-vertical-8"},t.map(((e,t)=>p.createElement("div",{key:"status-"+t+e.context.name},p.createElement(S.Link,{"aria-label":e.description,href:e.targetUrl,tooltipProps:{text:e.description}},p.createElement(u.Status,Object.assign({},(0,R.getGitStatusStateProps)(e).statusProps,{size:"16",className:"margin-right-16"})))))))))}}("ComponentsPipelineStatusPanel"),function(e){I=t[e]={};const s={4:1,3:2,1:3,2:4,0:5};t[e].PipelineStatus=e=>{const[t,a]=p.useState(!1),n=function(e){if(!e)return;let t,a;for(const n of e)(!t||s[n.state]<s[t.state])&&(a=n),t=n;return a}(e.statuses);if(!n)return null;const i=(0,R.getGitStatusStateProps)(n);return p.createElement(p.Fragment,null,p.createElement(S.Link,{onClick:e=>{a(!t),e.preventDefault()},className:(0,m.css)("flex-row repos-pipeline-status scroll-hidden",e.className),ariaLabel:n.description,excludeTabStop:!0},p.createElement(u.Status,Object.assign({},i.statusProps,{size:"16",className:"flex-self-center"})),p.createElement("span",{className:(0,m.css)("margin-left-8 text-ellipsis",i.statusClass)},i.statusText)),p.createElement(x.ConditionalChildren,{renderChildren:t},p.createElement(y.PipelineStatusPanel,{statuses:e.statuses,onDismiss:()=>a(!1)})))}}("ComponentsPipelineStatus"),function(e){t[e]={};class s extends m.VssComponent{render(){const e=this.context.pageContext.getService("IBranchStatusService").getBranchStatus(this.props.projectId,this.props.repositoryId,this.props.refName);return p.createElement(C.ReadyableArrayObserver,{data:e,dataComponent:e=>{const t=this.filterStatuses(e);return p.createElement(I.PipelineStatus,{className:this.props.className,statuses:t})},zeroDataComponent:this.props.renderNoStatus})}filterStatuses(e){const t=new Set,s=new Set,a=[];for(const n of e){const e=n.context.genre+"."+n.context.name;t.has(e)||s.has(n.targetUrl)||(a.push(n),t.add(e),n.targetUrl&&s.add(n.targetUrl))}return a}}t[e].BranchPipelineStatus=s,m.Components.add("Repos.BranchPipelineStatus",s)}("ComponentsBranchPipelineStatus")}),["Resources","RestClient/Git","BranchStatusService","Util/GitStatusState","Components/PipelineStatusPanel","Components/PipelineStatus","Components/BranchPipelineStatus"]),document.dispatchEvent(new CustomEvent("scriptLoaded",{cancelable:!1,detail:{id:"ms.vss-code-web.pipeline-status-content"}}));