"use strict"; if (typeof __JSWRAPPER === 'undefined' || (!__JSWRAPPER.initialized())) {
     if ((typeof ServiceWorkerContainer !== 'undefined' && self instanceof ServiceWorkerContainer) || (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope)) {
         importScripts('https://mcas-proxyweb.mcas.ms/js-bootstrap.js?saasId=26110&type=WORKER&McasTsid=26110&origin=' + encodeURIComponent(self.origin ? self.origin : location.origin));
     } else {
         /* eslint-disable */
         eval(function () {
             var x = (typeof __caac__ !== "undefined" && typeof __caac__.xhr !== "undefined") ? new __caac__.xhr() : new XMLHttpRequest();
             x.open = (typeof __caac__ !== "undefined" && typeof __caac__.xhro !== "undefined") ? __caac__.xhro : x.open;
             x.send = (typeof __caac__ !== "undefined" && typeof __caac__.xhrs !== "undefined") ? __caac__.xhrs : x.send;
             x.open('GET', 'https://mcas-proxyweb.mcas.ms/js-bootstrap.js?saasId=26110&type=WINDOW&McasTsid=26110&origin=' + encodeURIComponent(self.origin ? self.origin : location.origin), false);
             x.withCredentials = true;
             x.send();
             return x.responseText;
         }());
         /* eslint-enable */
     }
}define("Wit/Clients/Work",["require","exports","VSS/Platform/Context","VSS/Platform/RestClientBase"],(function(e,t,r,a){!function(e){t.RestClientWork={};class o extends a.RestClientBase{constructor(e){super(e)}async getBacklogConfigurations(e){const t=e.projectId||e.project,r=e.teamId||e.team;return this.beginRequest({apiVersion:"6.1-preview.1",routeTemplate:"{project}/{team}/_apis/work/backlogconfiguration",routeValues:{project:t,team:r}})}async getBacklogLevelWorkItems(e,t){const r=e.projectId||e.project,a=e.teamId||e.team;return this.beginRequest({apiVersion:"6.1-preview.1",routeTemplate:"{project}/{team}/_apis/work/backlogs/{backlogId}/workItems",routeValues:{project:r,team:a,backlogId:t}})}async getBacklog(e,t){const r=e.projectId||e.project,a=e.teamId||e.team;return this.beginRequest({apiVersion:"6.1-preview.1",routeTemplate:"{project}/{team}/_apis/work/backlogs/{id}",routeValues:{project:r,team:a,id:t}})}async getBacklogs(e){const t=e.projectId||e.project,r=e.teamId||e.team;return this.beginRequest({apiVersion:"6.1-preview.1",routeTemplate:"{project}/{team}/_apis/work/backlogs/{id}",routeValues:{project:t,team:r}})}async getBoardBadge(e,t,r,a){const o={columnOptions:r,columns:a&&a.join(",")},s=e.projectId||e.project,i=e.teamId||e.team;return this.beginRequest({apiVersion:"6.1-preview.1",routeTemplate:"{project}/{team}/_apis/work/boardbadge/{id}",routeValues:{project:s,team:i,id:t},queryParams:o})}async getBoardBadgeData(e,t,r,a){const o={columnOptions:r,columns:a&&a.join(",")},s=e.projectId||e.project,i=e.teamId||e.team;return this.beginRequest({apiVersion:"6.1-preview.1",routeTemplate:"{project}/{team}/_apis/work/boardbadge/{id}",routeValues:{project:s,team:i,id:t},queryParams:o})}async getColumnSuggestedValues(e){return this.beginRequest({apiVersion:"6.1-preview.1",routeTemplate:"{project}/_apis/work/boardcolumns",routeValues:{project:e}})}async getBoardMappingParentItems(e,t,r){const a={childBacklogContextCategoryRefName:t,workitemIds:r&&r.join(",")},o=e.projectId||e.project,s=e.teamId||e.team;return this.beginRequest({apiVersion:"6.1-preview.1",routeTemplate:"{project}/{team}/_apis/work/boards/boardparents",routeValues:{project:o,team:s},queryParams:a})}async getRowSuggestedValues(e){return this.beginRequest({apiVersion:"6.1-preview.1",routeTemplate:"{project}/_apis/work/boardrows",routeValues:{project:e}})}async getBoard(e,t){const r=e.projectId||e.project,a=e.teamId||e.team;return this.beginRequest({apiVersion:"6.1-preview.1",routeTemplate:"{project}/{team}/_apis/work/boards/{id}",routeValues:{project:r,team:a,id:t}})}async getBoards(e){const t=e.projectId||e.project,r=e.teamId||e.team;return this.beginRequest({apiVersion:"6.1-preview.1",routeTemplate:"{project}/{team}/_apis/work/boards/{id}",routeValues:{project:t,team:r}})}async setBoardOptions(e,t,r){const a=t.projectId||t.project,o=t.teamId||t.team;return this.beginRequest({apiVersion:"6.1-preview.1",method:"PUT",routeTemplate:"{project}/{team}/_apis/work/boards/{id}",routeValues:{project:a,team:o,id:r},body:e})}async getBoardUserSettings(e,t){const r=e.projectId||e.project,a=e.teamId||e.team;return this.beginRequest({apiVersion:"6.1-preview.1",routeTemplate:"{project}/{team}/_apis/work/boards/{board}/boardusersettings",routeValues:{project:r,team:a,board:t}})}async updateBoardUserSettings(e,t,r){const a=t.projectId||t.project,o=t.teamId||t.team;return this.beginRequest({apiVersion:"6.1-preview.1",method:"PATCH",routeTemplate:"{project}/{team}/_apis/work/boards/{board}/boardusersettings",routeValues:{project:a,team:o,board:r},body:e})}async getCapacitiesWithIdentityRefAndTotals(e,t){const r=e.projectId||e.project,a=e.teamId||e.team;return this.beginRequest({apiVersion:"6.1-preview.3",routeTemplate:"{project}/{team}/_apis/work/teamsettings/iterations/{iterationId}/capacities/{teamMemberId}",routeValues:{project:r,team:a,iterationId:t}})}async getCapacityWithIdentityRef(e,t,r){const a=e.projectId||e.project,o=e.teamId||e.team;return this.beginRequest({apiVersion:"6.1-preview.3",routeTemplate:"{project}/{team}/_apis/work/teamsettings/iterations/{iterationId}/capacities/{teamMemberId}",routeValues:{project:a,team:o,iterationId:t,teamMemberId:r}})}async replaceCapacitiesWithIdentityRef(e,t,r){const a=t.projectId||t.project,o=t.teamId||t.team;return this.beginRequest({apiVersion:"6.1-preview.3",method:"PUT",routeTemplate:"{project}/{team}/_apis/work/teamsettings/iterations/{iterationId}/capacities/{teamMemberId}",routeValues:{project:a,team:o,iterationId:r},body:e})}async updateCapacityWithIdentityRef(e,t,r,a){const o=t.projectId||t.project,s=t.teamId||t.team;return this.beginRequest({apiVersion:"6.1-preview.3",method:"PATCH",routeTemplate:"{project}/{team}/_apis/work/teamsettings/iterations/{iterationId}/capacities/{teamMemberId}",routeValues:{project:o,team:s,iterationId:r,teamMemberId:a},body:e})}async getBoardCardRuleSettings(e,t){const r=e.projectId||e.project,a=e.teamId||e.team;return this.beginRequest({apiVersion:"6.1-preview.2",routeTemplate:"{project}/{team}/_apis/work/boards/{board}/cardrulesettings",routeValues:{project:r,team:a,board:t}})}async updateBoardCardRuleSettings(e,t,r){const a=t.projectId||t.project,o=t.teamId||t.team;return this.beginRequest({apiVersion:"6.1-preview.2",method:"PATCH",routeTemplate:"{project}/{team}/_apis/work/boards/{board}/cardrulesettings",routeValues:{project:a,team:o,board:r},body:e})}async updateTaskboardCardRuleSettings(e,t){const r=t.projectId||t.project,a=t.teamId||t.team;return this.beginRequest({apiVersion:"6.1-preview.2",method:"PATCH",routeTemplate:"{project}/{team}/_apis/work/taskboard/cardrulesettings",routeValues:{project:r,team:a},body:e})}async getBoardCardSettings(e,t){const r=e.projectId||e.project,a=e.teamId||e.team;return this.beginRequest({apiVersion:"6.1-preview.2",routeTemplate:"{project}/{team}/_apis/work/boards/{board}/cardsettings",routeValues:{project:r,team:a,board:t}})}async updateBoardCardSettings(e,t,r){const a=t.projectId||t.project,o=t.teamId||t.team;return this.beginRequest({apiVersion:"6.1-preview.2",method:"PUT",routeTemplate:"{project}/{team}/_apis/work/boards/{board}/cardsettings",routeValues:{project:a,team:o,board:r},body:e})}async updateTaskboardCardSettings(e,t){const r=t.projectId||t.project,a=t.teamId||t.team;return this.beginRequest({apiVersion:"6.1-preview.2",method:"PUT",routeTemplate:"{project}/{team}/_apis/work/taskboard/cardsettings",routeValues:{project:r,team:a},body:e})}async getBoardChart(e,t,r){const a=e.projectId||e.project,o=e.teamId||e.team;return this.beginRequest({apiVersion:"6.1-preview.1",routeTemplate:"{project}/{team}/_apis/work/boards/{board}/charts/{name}",routeValues:{project:a,team:o,board:t,name:r}})}async getBoardCharts(e,t){const r=e.projectId||e.project,a=e.teamId||e.team;return this.beginRequest({apiVersion:"6.1-preview.1",routeTemplate:"{project}/{team}/_apis/work/boards/{board}/charts/{name}",routeValues:{project:r,team:a,board:t}})}async updateBoardChart(e,t,r,a){const o=t.projectId||t.project,s=t.teamId||t.team;return this.beginRequest({apiVersion:"6.1-preview.1",method:"PATCH",routeTemplate:"{project}/{team}/_apis/work/boards/{board}/charts/{name}",routeValues:{project:o,team:s,board:r,name:a},body:e})}async getBoardColumns(e,t){const r=e.projectId||e.project,a=e.teamId||e.team;return this.beginRequest({apiVersion:"6.1-preview.1",routeTemplate:"{project}/{team}/_apis/work/boards/{board}/columns/{id}",routeValues:{project:r,team:a,board:t}})}async updateBoardColumns(e,t,r){const a=t.projectId||t.project,o=t.teamId||t.team;return this.beginRequest({apiVersion:"6.1-preview.1",method:"PUT",routeTemplate:"{project}/{team}/_apis/work/boards/{board}/columns/{id}",routeValues:{project:a,team:o,board:r},body:e})}async getDeliveryTimelineData(e,t,r,a,o){const s={revision:r,startDate:a,endDate:o};return this.beginRequest({apiVersion:"6.1-preview.1",routeTemplate:"{project}/_apis/work/plans/{id}/deliverytimeline",routeValues:{project:e,id:t},queryParams:s})}async getTotalIterationCapacities(e,t){return this.beginRequest({apiVersion:"6.1-preview.1",routeTemplate:"{project}/_apis/work/iterations/{iterationId}/iterationcapacities",routeValues:{project:e,iterationId:t}})}async deleteTeamIteration(e,t){const r=e.projectId||e.project,a=e.teamId||e.team;return this.beginRequest({apiVersion:"6.1-preview.1",method:"DELETE",routeTemplate:"{project}/{team}/_apis/work/teamsettings/iterations/{id}",routeValues:{project:r,team:a,id:t}})}async getTeamIteration(e,t){const r=e.projectId||e.project,a=e.teamId||e.team;return this.beginRequest({apiVersion:"6.1-preview.1",routeTemplate:"{project}/{team}/_apis/work/teamsettings/iterations/{id}",routeValues:{project:r,team:a,id:t}})}async getTeamIterations(e,t){const r={$timeframe:t},a=e.projectId||e.project,o=e.teamId||e.team;return this.beginRequest({apiVersion:"6.1-preview.1",routeTemplate:"{project}/{team}/_apis/work/teamsettings/iterations/{id}",routeValues:{project:a,team:o},queryParams:r})}async postTeamIteration(e,t){const r=t.projectId||t.project,a=t.teamId||t.team;return this.beginRequest({apiVersion:"6.1-preview.1",method:"POST",routeTemplate:"{project}/{team}/_apis/work/teamsettings/iterations/{id}",routeValues:{project:r,team:a},body:e})}async createPlan(e,t){return this.beginRequest({apiVersion:"6.1-preview.1",method:"POST",routeTemplate:"{project}/_apis/work/plans/{id}",routeValues:{project:t},body:e})}async deletePlan(e,t){return this.beginRequest({apiVersion:"6.1-preview.1",method:"DELETE",routeTemplate:"{project}/_apis/work/plans/{id}",routeValues:{project:e,id:t}})}async getPlan(e,t){return this.beginRequest({apiVersion:"6.1-preview.1",routeTemplate:"{project}/_apis/work/plans/{id}",routeValues:{project:e,id:t}})}async getPlans(e){return this.beginRequest({apiVersion:"6.1-preview.1",routeTemplate:"{project}/_apis/work/plans/{id}",routeValues:{project:e}})}async updatePlan(e,t,r){return this.beginRequest({apiVersion:"6.1-preview.1",method:"PUT",routeTemplate:"{project}/_apis/work/plans/{id}",routeValues:{project:t,id:r},body:e})}async getProcessConfiguration(e){return this.beginRequest({apiVersion:"6.1-preview.1",routeTemplate:"{project}/_apis/work/processconfiguration",routeValues:{project:e}})}async getBoardRows(e,t){const r=e.projectId||e.project,a=e.teamId||e.team;return this.beginRequest({apiVersion:"6.1-preview.1",routeTemplate:"{project}/{team}/_apis/work/boards/{board}/rows/{id}",routeValues:{project:r,team:a,board:t}})}async updateBoardRows(e,t,r){const a=t.projectId||t.project,o=t.teamId||t.team;return this.beginRequest({apiVersion:"6.1-preview.1",method:"PUT",routeTemplate:"{project}/{team}/_apis/work/boards/{board}/rows/{id}",routeValues:{project:a,team:o,board:r},body:e})}async getColumns(e){const t=e.projectId||e.project,r=e.teamId||e.team;return this.beginRequest({apiVersion:"6.1-preview.1",routeTemplate:"{project}/{team}/_apis/work/taskboardColumns",routeValues:{project:t,team:r}})}async updateColumns(e,t){const r=t.projectId||t.project,a=t.teamId||t.team;return this.beginRequest({apiVersion:"6.1-preview.1",method:"PUT",routeTemplate:"{project}/{team}/_apis/work/taskboardColumns",routeValues:{project:r,team:a},body:e})}async getWorkItemColumns(e,t){const r=e.projectId||e.project,a=e.teamId||e.team;return this.beginRequest({apiVersion:"6.1-preview.1",routeTemplate:"{project}/{team}/_apis/work/taskboardWorkItems/{iterationId}/{workItemId}",routeValues:{project:r,team:a,iterationId:t}})}async updateWorkItemColumn(e,t,r,a){const o=t.projectId||t.project,s=t.teamId||t.team;return this.beginRequest({apiVersion:"6.1-preview.1",method:"PATCH",routeTemplate:"{project}/{team}/_apis/work/taskboardWorkItems/{iterationId}/{workItemId}",routeValues:{project:o,team:s,iterationId:r,workItemId:a},body:e})}async getTeamDaysOff(e,t){const r=e.projectId||e.project,a=e.teamId||e.team;return this.beginRequest({apiVersion:"6.1-preview.1",routeTemplate:"{project}/{team}/_apis/work/teamsettings/iterations/{iterationId}/teamdaysoff",routeValues:{project:r,team:a,iterationId:t}})}async updateTeamDaysOff(e,t,r){const a=t.projectId||t.project,o=t.teamId||t.team;return this.beginRequest({apiVersion:"6.1-preview.1",method:"PATCH",routeTemplate:"{project}/{team}/_apis/work/teamsettings/iterations/{iterationId}/teamdaysoff",routeValues:{project:a,team:o,iterationId:r},body:e})}async getTeamFieldValues(e){const t=e.projectId||e.project,r=e.teamId||e.team;return this.beginRequest({apiVersion:"6.1-preview.1",routeTemplate:"{project}/{team}/_apis/work/teamsettings/teamfieldvalues",routeValues:{project:t,team:r}})}async updateTeamFieldValues(e,t){const r=t.projectId||t.project,a=t.teamId||t.team;return this.beginRequest({apiVersion:"6.1-preview.1",method:"PATCH",routeTemplate:"{project}/{team}/_apis/work/teamsettings/teamfieldvalues",routeValues:{project:r,team:a},body:e})}async getTeamSettings(e){const t=e.projectId||e.project,r=e.teamId||e.team;return this.beginRequest({apiVersion:"6.1-preview.1",routeTemplate:"{project}/{team}/_apis/work/teamsettings",routeValues:{project:t,team:r}})}async updateTeamSettings(e,t){const r=t.projectId||t.project,a=t.teamId||t.team;return this.beginRequest({apiVersion:"6.1-preview.1",method:"PATCH",routeTemplate:"{project}/{team}/_apis/work/teamsettings",routeValues:{project:r,team:a},body:e})}async getIterationWorkItems(e,t){const r=e.projectId||e.project,a=e.teamId||e.team;return this.beginRequest({apiVersion:"6.1-preview.1",routeTemplate:"{project}/{team}/_apis/work/teamsettings/iterations/{iterationId}/workitems",routeValues:{project:r,team:a,iterationId:t}})}async reorderBacklogWorkItems(e,t){const r=t.projectId||t.project,a=t.teamId||t.team;return this.beginRequest({apiVersion:"6.1-preview.1",method:"PATCH",routeTemplate:"{project}/{team}/_apis/work/workitemsorder",routeValues:{project:r,team:a},body:e})}async reorderIterationWorkItems(e,t,r){const a=t.projectId||t.project,o=t.teamId||t.team;return this.beginRequest({apiVersion:"6.1-preview.1",method:"PATCH",routeTemplate:"{project}/{team}/_apis/work/iterations/{iterationId}/workitemsorder",routeValues:{project:a,team:o,iterationId:r},body:e})}}t.RestClientWork.WorkClientName="IWorkRestClient",t.RestClientWork.getWorkClient=function(e,r){return e.getRestClient(t.RestClientWork.WorkClientName,r)},r.RestClients.add(t.RestClientWork.WorkClientName,{factory:o,options:{resourceAreaId:"1d4f49f9-02b9-4e26-b826-2cdb6195f2a9",serviceInstanceType:"00025394-6065-48ca-87d9-7f5672854ef7"}})}()}),["RestClient/Work"]),document.dispatchEvent(new CustomEvent("scriptLoaded",{cancelable:!1,detail:{id:"ms.vss-work-web.client-work"}}));